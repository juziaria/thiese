<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdy.thieseback.mapper.AdminMapper">

    <insert id="insertDocument">
        insert into document (extension, name, content, uploadtime, size, flag)
        values (#{file.extension}, #{file.name}, #{file.content}, #{file.uploadTime}, #{file.size}, #{file.flag})
    </insert>

    <select id="selectDocument" resultType="com.gdy.thieseback.entity.Document">
        select *
        from document
        where flag = #{flag}
        <if test="id != null and id != 0">
            and id = #{id}
        </if>
        <if test="name != null and name != ''">
            and name like #{name}
        </if>
    </select>

    <select id="selectDocumentCount" resultType="Integer">
        select distinct count(*)
        from document
        where flag = #{flag}
        <if test="name != null and name != ''">
            and name like #{name}
        </if>
    </select>

    <update id="deleteDocument">
        update document
        set flag = #{flag}
        where id = #{id}
    </update>

    <select id="selectNotices_1" resultType="com.gdy.thieseback.entity.Notice">
        select *
        from notice
        <if test="id != null and flag == null">
            where id = #{id}
        </if>
        <if test="id == null and flag != null">
            where flag = #{flag}
        </if>
        <if test="id != null and flag != null">
            where flag = #{flag} and id = #{id}
        </if>
    </select>

    <select id="selectNotice_2" resultType="com.gdy.thieseback.entity.Notice">
        select *
        from notice
        where flag = #{flag}
        <if test="type != null">
            and type = #{type}
        </if>
        <if test="name != null and name != ''">
            and notice.title like #{name}
        </if>
        <if test="time != null">
            and publishTime between #{timeBefore} and #{timeLast}
        </if>
    </select>

    <update id="updateNotice" parameterType="com.gdy.thieseback.entity.Notice">
        update notice
        set "publishTime" = #{publishTime}, collage = #{collage},
            title = #{notice.title}, content = #{notice.content},"documentId" = #{notice.documentId}
        where id = #{notice.id}
    </update>

    <insert id="insertNotice" parameterType="com.gdy.thieseback.entity.Notice"
            useGeneratedKeys="true" keyProperty="id">
        insert into notice ("publishTime", collage, title, content, flag, "documentId", type)
        values (#{notice.publishTime}, #{notice.collage}, #{notice.title}, 
                #{notice.content}, #{notice.flag}, #{notice.documentId}, #{notice.type})
    </insert>

    <update id="updateNoticeFlag">
        update notice
        set flag = #{flag}
        where id = #{id}
    </update>

    <select id="selectRecruitments" resultType="com.gdy.thieseback.entity.Recruit">
        select *
        from recruit
        where 1 = 1
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="flag != null">
            and flag = #{flag}
        </if>
        <if test="companyScc != null and companyScc != ''">
            and companyScc = #{companyScc}
        </if>
    </select>

    <update id="updateRecruitmentFlag">
        update recruit
        set flag = #{flag}
        where id = #{id}
    </update>

    <select id="selectResumes" resultType="com.gdy.thieseback.entity.Resume">
        select *
        from resume
        where flag = #{flag}
        <if test="id != null">
            and id = #{id}
        </if>
    </select>

    <update id="deleteResume">
        update resume
        set flag = #{flag}
        where id = #{id}
    </update>

    <insert id="insertResume">
        insert into resume(content, filename, extension, flag)
        values (#{resume.content}, #{resume.filename}, #{resume.extension}, #{resume.flag})
    </insert>

    <select id="selectMeeting" resultType="com.gdy.thieseback.entity.EmployMeeting">
        select *
        from employMeeting
        <if test="flag != null and id != null">
            where flag = #{flag} and id = #{id}
        </if>
        <if test="flag != null and id == null">
            where flag = #{flag}
        </if>
        <if test="flag == null and id != null">
            where id = #{id}
        </if>
    </select>

    <update id="updateMeetingFlag">
        update employmeeting
        set flag = #{flag}
        where id = #{id}
    </update>

    <insert id="InsertMeeting">
        insert into employmeeting(time, name, master, place, amount, major, type, flag)
        values(#{employMeeting.time}, #{employMeeting.name}, #{employMeeting.master},
               #{employMeeting.place}, #{employMeeting.amount}, #{employMeeting.major},
               #employMeeting.type),#{employMeeting.flag}
    </insert>

    <select id="selectAdvices" resultType="String">
        select advice
        from questionnaire
        <if test="grade != null">
            where grade = #{grade}
        </if>
    </select>

<!-- TODO å¾…create table parameter
    <update id="updateIfOpenQuestionnaire">
        update parameter
        set ifOpenQuestionnaire = #{value}
    </update>
-->



    <select id="CountMeetingType" resultType="map">
        select type, count(*)
        from employmeeting
        where flag != #{notFlag} and employMeeting.time.YEAR = #{year}
        group by employMeeting.type
    </select>

    <select id="CountMeetingForMajor" resultType="map">
        select major, count(*)
        from employmeeting
        where flag != {notFlag} and employMeeting.time.YEAR = #{year}
        group by employMeeting.major
    </select>

    <select id="countEmploymentStatus" resultType="map">
        select employmentStatus, count(*)
        from employment
        where studentId in (
            select id from student where flag = 0 
            <if test="grade != null">
                and grade = #{grade}
            </if>
            <if test="collage != null and collage != ''">
                and collage = #{collage}
            </if>
            <if test="major != null and major != ''">
                and major = #{major}
            </if>
        )
            and workProperty = #{workProperty}
            and flag = #{flag}
        group by employmentStatus
    </select>



    <select id="employmentDistributionByCompany" resultType="map">
        select companyScc, count(*)
        from experience
        where employmentId in (
            select id from employment where studentId in (
                select id from student where 1 = 1
                <if test="grade != null">
                    and grade = #{grade}
                </if>
                <if test="collage != null and collage != ''">
                    and collage = #{collage}
                </if>
                <if test="major != null and major != ''">
                    and major = #{major}
                </if>
            )
        )
        and workProperty = #{workProperty}
        group by companyScc
    </select>

    <select id="employmentDistributionByWorkplace" resultType="map">
        select workPlace, count(*)
        from experience
        where employmentId in (
            select id from employment where studentId in (
                select id from student where 1 = 1
                <if test="grade != null">
                    and grade = #{grade}
                </if>
                <if test="collage != null and collage != ''">
                    and collage = #{collage}
                </if>
                <if test="major != null and major != ''">
                    and major = #{major}
                </if>
            )
        )
        and workProperty = #{workProperty}
        group by workPlace
    </select>

    <select id="employmentDistributionByIndustry" resultType="map">
        select industry, count(*)
        from experience
        where employmentId in (
        select id from employment where studentId in (
            select id from student where 1 = 1
                <if test="grade != null">
                    and grade = #{grade}
                </if>
                <if test="collage != null and collage != ''">
                    and collage = #{collage}
                </if>
                <if test="major != null and major != ''">
                    and major = #{major}
                </if>
            )
        )
        and workProperty = #{workProperty}
        group by industry
    </select>

    <select id="employmentDistributionByPosition" resultType="map">
        select position, count(*)
        from experience
        where employmentId in (
        select id from employment where studentId in (
        select id from student where 1 = 1
                <if test="grade != null">
                    and grade = #{grade}
                </if>
                <if test="collage != null and collage != ''">
                    and collage = #{collage}
                </if>
                <if test="major != null and major != ''">
                    and major = #{major}
                </if>
            )
        )
        and workProperty = #{workProperty}
        group by position
    </select>

    <select id="employmentDistributionByCompanyProperty" resultType="map">
        select companyProperty, count(*)
        from experience
        where employmentId in (
        select id from employment where studentId in (
        select id from student where 1 = 1
                <if test="grade != null">
                    and grade = #{grade}
                </if>
                <if test="collage != null and collage != ''">
                    and collage = #{collage}
                </if>
                <if test="major != null and major != ''">
                    and major = #{major}
                </if>
            )
        )
        and workProperty = #{workProperty}
        group by companyProperty
    </select>
</mapper>